// Code generated by go-swagger; DO NOT EDIT.

package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/repa40x/hackzurich2019-be/generated/models"
)

// GetGameStateOKCode is the HTTP code returned for type GetGameStateOK
const GetGameStateOKCode int = 200

/*GetGameStateOK Game state

swagger:response getGameStateOK
*/
type GetGameStateOK struct {

	/*
	  In: Body
	*/
	Payload *models.GameState `json:"body,omitempty"`
}

// NewGetGameStateOK creates GetGameStateOK with default headers values
func NewGetGameStateOK() *GetGameStateOK {

	return &GetGameStateOK{}
}

// WithPayload adds the payload to the get game state o k response
func (o *GetGameStateOK) WithPayload(payload *models.GameState) *GetGameStateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game state o k response
func (o *GetGameStateOK) SetPayload(payload *models.GameState) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameStateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetGameStateDefault Error

swagger:response getGameStateDefault
*/
type GetGameStateDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetGameStateDefault creates GetGameStateDefault with default headers values
func NewGetGameStateDefault(code int) *GetGameStateDefault {
	if code <= 0 {
		code = 500
	}

	return &GetGameStateDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get game state default response
func (o *GetGameStateDefault) WithStatusCode(code int) *GetGameStateDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get game state default response
func (o *GetGameStateDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get game state default response
func (o *GetGameStateDefault) WithPayload(payload *models.Error) *GetGameStateDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get game state default response
func (o *GetGameStateDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetGameStateDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
