// Code generated by go-swagger; DO NOT EDIT.

package game

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/repa40x/hackzurich2019-be/generated/models"
)

// PauseGameOKCode is the HTTP code returned for type PauseGameOK
const PauseGameOKCode int = 200

/*PauseGameOK Paused

swagger:response pauseGameOK
*/
type PauseGameOK struct {

	/*
	  In: Body
	*/
	Payload *models.GameDescription `json:"body,omitempty"`
}

// NewPauseGameOK creates PauseGameOK with default headers values
func NewPauseGameOK() *PauseGameOK {

	return &PauseGameOK{}
}

// WithPayload adds the payload to the pause game o k response
func (o *PauseGameOK) WithPayload(payload *models.GameDescription) *PauseGameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pause game o k response
func (o *PauseGameOK) SetPayload(payload *models.GameDescription) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PauseGameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PauseGameDefault Error

swagger:response pauseGameDefault
*/
type PauseGameDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPauseGameDefault creates PauseGameDefault with default headers values
func NewPauseGameDefault(code int) *PauseGameDefault {
	if code <= 0 {
		code = 500
	}

	return &PauseGameDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the pause game default response
func (o *PauseGameDefault) WithStatusCode(code int) *PauseGameDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the pause game default response
func (o *PauseGameDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the pause game default response
func (o *PauseGameDefault) WithPayload(payload *models.Error) *PauseGameDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the pause game default response
func (o *PauseGameDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PauseGameDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
